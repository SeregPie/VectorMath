!function(n,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(n="undefined"!=typeof globalThis?globalThis:n||self).VectorMath=t()}(this,(function(){"use strict";function n(n){return n.map((n=>Math.abs(n)))}function t(n,t,r){return Math.min(Math.max(n,t),r)}function r(n,t){return Math.abs(n-t)<=Number.EPSILON}function e(n,t){return n.reduce(((n,r,e)=>n+r*t[e]),0)}function u(n){return Math.hypot(...n)}function a(n,a){let i=u(n)*u(a);if(i){let u=t(e(n,a)/i,-1,1);return r(1,u)?1:u}return 0}function i(...n){return Math.acos(a(...n))}function c(...n){return i(...n)/Math.PI}function o(n){return n.slice()}function f(n,t){return n.map((n=>n*t))}function m(n,t){let r=u(n);return r?f(n,t/r):o(n)}function l(...n){let t=0,r=n.length,e=0;return n.forEach((n=>{let u=e+n;Number.MIN_SAFE_INTEGER<u&&u<Number.MAX_SAFE_INTEGER?e=u:(t+=e/r,e=n)})),t+=e/r,t}function p(n,t){return n.map(((n,r)=>n*t[r]))}function s(n,t){return l(...p(n,t))-l(...n)*l(...t)}function h(...n){return n[0].map(((t,r)=>l(...n.map((n=>n[r])))))}function d(n){return m(n,1)}function M(n,t){return n.map(((n,r)=>n-t[r]))}function b(n,t){return u(M(n,t))}function S(...n){return n.reduce(((n,t)=>n+t),0)}function g(...n){return Math.sqrt(function(...n){let t=l(...n);return l(...n.map((n=>Math.pow(n-t,2))))}(...n))}function E(n,t,r,e,u){return e+(n-t)*(u-e)/(r-t)}return{abs:n,add:function(n,t){return n.map(((n,r)=>n+t[r]))},addScalar:function(n,t){return n.map((n=>n+t))},angle:i,AngularDistance:c,AngularSimilarity:function(...n){return 1-c(...n)},clamp:function(n,r,e){return n.map(((n,u)=>t(n,r[u],e[u])))},clampLength:function(n,r,e){return m(n,t(u(n),r,e))},clampScalar:function(n,r,e){return n.map((n=>t(n,r,e)))},clone:o,CosineDistance:function(...n){return 1-a(...n)},CosineSimilarity:a,Covariance:s,DirectionalMean:function(...n){return m(h(...n.map((n=>d(n)))),l(...n.map((n=>u(n)))))},distance:b,div:function(n,t){return n.map(((n,r)=>n/t[r]))},divScalar:function(n,t){return n.map((n=>n/t))},dot:e,EuclideanDistance:b,length:u,ManhattanDistance:function(t,r){return S(...n(M(t,r)))},max:function(...n){return n[0].map(((t,r)=>Math.max(...n.map((n=>n[r])))))},mean:h,min:function(...n){return n[0].map(((t,r)=>Math.min(...n.map((n=>n[r])))))},mul:p,mulScalar:f,normalize:d,PearsonCorrelationCoefficient:function(n,e){let u=g(...n)*g(...e);if(u){let a=t(s(n,e)/u,-1,1);return r(1,a)?1:a}return 0},scale:function(n,t,r,e,u){return n.map(((n,a)=>E(n,t[a],r[a],e[a],u[a])))},scaleLength:function(n,t,r,e,a){return m(n,E(u(n),t,r,e,a))},scaleScalar:function(n,t,r,e,u){return n.map((n=>E(n,t,r,e,u)))},setLength:m,sub:M,subScalar:function(n,t){return n.map((n=>n-t))},sum:function(...n){return n[0].map(((t,r)=>S(...n.map((n=>n[r])))))}}}));
